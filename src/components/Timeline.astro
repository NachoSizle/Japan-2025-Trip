---
import DayCardWrapper from './DayCardWrapper.astro';
import WeatherWidget from './WeatherWidget.astro';

import { getCollection } from 'astro:content';


// Aplanar todos los días de todos los archivos de la colección
const diasCollection = await getCollection('itinerario');
const dias = diasCollection
  .flatMap(entry =>
    Array.isArray(entry.data.dias)
      ? entry.data.dias.map(dia => ({
          ...dia
        }))
      : []
  )
  .sort((a, b) => a.dia - b.dia);

console.log('dias ---->> ', dias);
// Función para calcular qué tarjetas mostrar según la fecha actual
function getDaysToShow() {
  // Para testing, puedes cambiar esta línea para simular diferentes fechas:
  // const now = new Date('2025-08-10'); // Para probar antes del viaje
  // const now = new Date('2025-08-13'); // Para probar día de vuelo
  //const now = new Date('2025-08-16'); // Para probar durante el viaje
  // const now = new Date('2025-08-29'); // Para probar al final del viaje
  const now = new Date(); // Fecha actual del sistema
  
  const currentDate = now.toISOString().split('T')[0]; // YYYY-MM-DD format
  
  
  // Fechas del viaje
  const flightDate = '2025-08-13'; // Día del vuelo desde España
  const tripStart = '2025-08-14'; // Llegada a Japón (día 1 del itinerario)
  const tripEnd = '2025-08-28'; // Último día (día 15 del itinerario)
  
  // 1. Antes del 13 agosto: Solo tarjeta de vuelo
  if (currentDate < flightDate) {
    return [{
      dia: 0, // Día especial para vuelo
      fecha: flightDate,
      titulo: 'Vuelo España → Japón',
      ciudad: 'En tránsito',
      actividades: [],
      showDayCard: false,
      isCurrentDay: false
    }];
  }
  
  // 2. 13 agosto: Tarjeta de vuelo + DayCard del día 1
  if (currentDate === flightDate) {
    const day1 = dias[0]; // Primer día del itinerario
    return [{
      ...day1,
      showDayCard: true,
      isCurrentDay: false
    }];
  }
  
  // 3. 14-27 agosto: Solo la DayCard del día actual correspondiente
  if (currentDate >= tripStart && currentDate < tripEnd) {
    // Encontrar qué día del itinerario corresponde a la fecha actual
    const currentDay = dias.find(dia => dia.fecha === currentDate);
    
    if (currentDay) {
      return [{
        ...currentDay,
        showDayCard: true,
        isCurrentDay: true
      }];
    } else {
      // Si no hay día específico para esta fecha, no mostrar nada
      return [];
    }
  }
  
  // 4. 28 agosto: DayCard del día 15
  if (currentDate === tripEnd) {
    const lastDay = dias[dias.length - 1]; // Último día del itinerario
    return [{
      ...lastDay,
      showDayCard: true,
      isCurrentDay: true
    }];
  }
  
  // 5. Después del 28 agosto: No mostrar nada o mostrar resumen completo
  return [];
}

const daysToShow = getDaysToShow();
---

<section id="itinerario" class="py-12 timeline-section">
  <div class="container mx-auto px-2 sm:px-4">
    <!-- Widget de clima al inicio de la sección -->
    {daysToShow.length > 0 && daysToShow[0].ciudad && daysToShow[0].ciudad !== 'En tránsito' && daysToShow[0].ciudad.trim() !== '' && (
      <div class="flex justify-center mb-6">
        <WeatherWidget city={daysToShow[0].ciudad} />
      </div>
    )}
    <!-- Header de la sección -->
    <div class="text-center m-0 mb-8">
      <h2 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold font-poppins m-0 mb-3 sm:mb-4 md:mb-6 timeline-title">
        Itinerario
      </h2>
      <p class="text-base sm:text-lg md:text-xl timeline-subtitle max-w-3xl mx-auto mb-4 sm:mb-6 md:mb-8 px-2 sm:px-4">
        Explora día a día nuestra aventura por Japón, con opciones especiales para celíacos en cada parada. Aquí irán apareciendo las tarjetas de vuelo y actividades según la fecha actual.
      </p>
    </div>

    <!-- Stats del viaje optimizadas para móvil -->
    <div class="max-w-4xl mx-auto mb-8 sm:mb-12 mt-8 md:gap-6 lg:gap-8 text-center px-1 grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-6">
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF1493; text-shadow: 0 0 10px rgba(255, 20, 147, 0.5);">{dias.length}</div>
        <div class="stat-label text-xs sm:text-sm">Días totales</div>
      </div>
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF6B6B; text-shadow: 0 0 10px rgba(255, 107, 107, 0.5);">{Array.from(new Set(dias.map(d => d.ciudad))).filter(Boolean).length}</div>
        <div class="stat-label text-xs sm:text-sm">Ciudades</div>
      </div>
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF0040; text-shadow: 0 0 10px rgba(255, 0, 64, 0.5);">
          {dias.reduce((total, dia) => total + dia.actividades.filter(a => (a as any).tipo === 'comida').length, 0)}
        </div>
        <div class="stat-label text-xs sm:text-sm">Experiencias gastronómicas</div>
      </div>
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF8A80; text-shadow: 0 0 10px rgba(255, 138, 128, 0.5);">
          {dias.reduce((total, dia) => total + dia.actividades.filter(a => (a as any).gluten_free).length, 0)}
        </div>
        <div class="stat-label text-xs sm:text-sm">Opciones GF</div>
      </div>
    </div>

    <!-- Timeline principal optimizada para móvil -->
    <div class="relative">      
      <!-- Tarjetas de días optimizadas para móvil -->
      <div class="space-y-6 sm:space-y-8 md:space-y-12">
        {daysToShow.map((dia, index) => {
          // Usar type casting para acceder a las propiedades añadidas
          const diaExtended = dia as any;
          
          return (
            <div class="relative">
              {/* Mostrar contador regresivo hasta la fecha del viaje mientras que estemos en un día que sea antes del primer día del viaje */}
              {dia.dia === 0 && (
                <div class="max-w-4xl mx-auto mb-8 sm:mb-12">
                  <h3 class="text-xl sm:text-2xl font-bold mb-4 sm:mb-6 countdown-title text-center">
                    🛫 ¡El viaje comienza en...!
                  </h3>
                  <div id="countdown" class="grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-6">
                    <div class="countdown-item">
                      <div id="days" class="countdown-number">--</div>
                      <div class="countdown-label">Días</div>
                    </div>
                    <div class="countdown-item">
                      <div id="hours" class="countdown-number">--</div>
                      <div class="countdown-label">Horas</div>
                    </div>
                    <div class="countdown-item">
                      <div id="minutes" class="countdown-number">--</div>
                      <div class="countdown-label">Minutos</div>
                    </div>
                    <div class="countdown-item">
                      <div id="seconds" class="countdown-number">--</div>
                      <div class="countdown-label">Segundos</div>
                    </div>
                  </div>
                  <div id="countdown-message" class="mt-4 text-sm sm:text-base countdown-message" style="display: none;">
                    🎌 ¡El viaje a Japón ha comenzado! 🎌
                  </div>
                </div>
              )}
              {/* Mostrar DayCard si corresponde */}
              {diaExtended.showDayCard && (
                <DayCardWrapper
                  day={dia.dia}
                  fecha={dia.fecha}
                  titulo={dia.titulo}
                  ciudad={dia.ciudad}
                  actividades={dia.actividades as any}
                  isCurrentDay={diaExtended.isCurrentDay}
                />
              )}
            </div>
          );
        })}
      </div>
    </div>

    <!-- CTAs alineados en la misma fila - optimizado para móvil -->
    <div class="text-center mt-8 sm:mt-12 md:mt-16 px-2 sm:px-4">
      <!-- Botones principales -->
      <div class="flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-6 lg:gap-8 mb-6">
        <!-- Botón para ver itinerario completo (primero) -->
        <a href={`${import.meta.env.BASE_URL}itinerario`} class="itinerario-complete-cta inline-flex items-center justify-center space-x-3 px-6 sm:px-8 lg:px-10 py-3 sm:py-4 lg:py-5 rounded-xl font-bold transition-all duration-300 transform hover:scale-105 text-sm sm:text-base lg:text-lg shadow-2xl w-full sm:w-auto no-underline">
          <span class="text-lg sm:text-xl">📅</span>
          <span class="whitespace-nowrap">Ver Itinerario Completo</span>
          <span class="text-lg sm:text-xl">🗾</span>
        </a>
        
        <!-- Botón para ver guía sin gluten (segundo) -->
        <a href="#gluten-free" class="timeline-cta inline-flex items-center justify-center space-x-3 px-6 sm:px-8 lg:px-10 py-3 sm:py-4 lg:py-5 rounded-xl font-bold transition-all duration-300 transform hover:scale-105 text-sm sm:text-base lg:text-lg shadow-2xl w-full sm:w-auto no-underline">
          <span class="text-lg sm:text-xl">🌾</span>
          <span class="whitespace-nowrap">Ver Guía Sin Gluten</span>
          <span class="text-lg sm:text-xl">🚫</span>
        </a>
      </div>
      
      <!-- Descripción del itinerario completo -->
      <p class="text-xs sm:text-sm text-gray-400 max-w-2xl mx-auto">
        Explora todos los días del viaje con detalles completos de cada actividad y opciones especiales para celíacos
      </p>
    </div>
  </div>
</section>

<script>
  // Contador regresivo
  function startCountdown() {
    // Fecha objetivo: 13 de agosto de 2025 a las 00:00:00
    const targetDate = new Date('2025-08-13T00:00:00').getTime();
    
    function updateCountdown() {
      const now = new Date().getTime();
      const distance = targetDate - now;
      
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);
      
      // Actualizar los elementos del DOM
      const daysEl = document.getElementById('days');
      const hoursEl = document.getElementById('hours');
      const minutesEl = document.getElementById('minutes');
      const secondsEl = document.getElementById('seconds');
      const countdownEl = document.getElementById('countdown');
      const messageEl = document.getElementById('countdown-message');
      
      if (distance > 0) {
        // El viaje aún no ha comenzado
        if (daysEl) daysEl.textContent = days.toString().padStart(2, '0');
        if (hoursEl) hoursEl.textContent = hours.toString().padStart(2, '0');
        if (minutesEl) minutesEl.textContent = minutes.toString().padStart(2, '0');
        if (secondsEl) secondsEl.textContent = seconds.toString().padStart(2, '0');
        
        if (countdownEl) countdownEl.style.display = 'grid';
        if (messageEl) messageEl.style.display = 'none';
      } else {
        // El viaje ha comenzado
        if (countdownEl) countdownEl.style.display = 'none';
        if (messageEl) {
          messageEl.style.display = 'block';
          messageEl.innerHTML = '🎌 ¡El viaje a Japón ha comenzado! 🎌';
        }
      }
    }
    
    // Actualizar inmediatamente
    updateCountdown();
    
    // Actualizar cada segundo
    const interval = setInterval(updateCountdown, 1000);

    // Detener el intervalo si el componente se desmonta
    return () => clearInterval(interval);
  }

// Ejecutar al cargar la página
  document.addEventListener('DOMContentLoaded', () => {
    startCountdown();
  });
  
  // Observar cambios en el atributo data-theme
  const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.type === 'attributes' && mutation.attributeName === 'data-theme') {
        startCountdown();
      }
    });
  });
  
  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['data-theme']
  });
</script>

<style>
  /* Timeline Section */
  .timeline-section {
    background: linear-gradient(135deg, #1a1a1a 0%, #2d1b3d 100%);
    position: relative;
  }
  
  :global(:global([data-theme="light"])) .timeline-section {
    background: linear-gradient(135deg, #FFE8E8 0%, #FFDDDD 100%) !important;
  }

  /* Timeline Title */
  .timeline-title {
    background: linear-gradient(135deg, #FF1493, #FF6B6B, #FF0040);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 30px rgba(255, 20, 147, 0.5);
  }

  /* Timeline Subtitle */
  .timeline-subtitle {
    color: rgba(255, 255, 255, 0.8);
  }
  
  /* ===== ESTILOS PARA MODO CLARO ===== */
  :global(:global([data-theme="light"])) .timeline-title {
    background: linear-gradient(135deg, #C41E3A, #DC143C, #8B0000) !important;
    -webkit-background-clip: text !important;
    background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    text-shadow: none !important;
  }
  
  :global(:global([data-theme="light"])) .timeline-subtitle {
    color: #2D1B1B !important;
    font-weight: 600;
    opacity: 0.95;
    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.3);
  }

  /* Stats Cards */
  .timeline-stat-card {
    background: rgba(255, 20, 147, 0.1);
    border: 1px solid rgba(255, 20, 147, 0.3);
    backdrop-filter: blur(10px);
  }
  
  .timeline-stat-card:hover {
    border-color: rgba(255, 20, 147, 0.5);
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.2);
  }
  
  :global([data-theme="light"]) .timeline-stat-card {
    background: rgba(255, 20, 147, 0.05);
    border: 1px solid rgba(255, 20, 147, 0.2);
  }
  
  :global([data-theme="light"]) .timeline-stat-card:hover {
    background: rgba(255, 20, 147, 0.1);
    border-color: rgba(255, 20, 147, 0.4);
  }

  .stat-label {
    color: rgba(255, 255, 255, 0.7);
  }
  
  :global([data-theme="light"]) .stat-label {
    color: #2d2d2d !important;
    font-weight: 500;
  }

  /* CTA Button */
  .timeline-cta {
    background: linear-gradient(135deg, #FF6B6B, #FF1493);
    color: white;
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.3);
    border: 2px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
  }
  
  .timeline-cta:hover {
    box-shadow: 0 12px 40px rgba(255, 20, 147, 0.5);
    border-color: rgba(255, 255, 255, 0.2);
    transform: scale(1.05) translateY(-2px);
  }

  /* Itinerario Complete CTA Button */
  .itinerario-complete-cta {
    background: linear-gradient(135deg, #FF1493, #FF0040, #8B0000);
    color: white;
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.3);
    border: 2px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
  }
  
  .itinerario-complete-cta:hover {
    box-shadow: 0 12px 40px rgba(255, 20, 147, 0.5);
    border-color: rgba(255, 255, 255, 0.2);
    transform: scale(1.05) translateY(-2px);
  }
  
  :global([data-theme="light"]) .timeline-cta {
    background: linear-gradient(135deg, #FF6B6B, #DC143C);
    box-shadow: 0 8px 32px rgba(255, 107, 107, 0.3);
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  :global([data-theme="light"]) .timeline-cta:hover {
    box-shadow: 0 12px 40px rgba(255, 107, 107, 0.4);
    border-color: rgba(255, 255, 255, 0.5);
  }
  
  :global([data-theme="light"]) .itinerario-complete-cta {
    background: linear-gradient(135deg, #DC143C, #8B0000, #4A0000);
    box-shadow: 0 8px 32px rgba(220, 20, 60, 0.3);
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  :global([data-theme="light"]) .itinerario-complete-cta:hover {
    box-shadow: 0 12px 40px rgba(220, 20, 60, 0.4);
    border-color: rgba(255, 255, 255, 0.5);
  }

  /* No underline for CTA buttons */
  .no-underline {
    text-decoration: none !important;
  }
  
  .no-underline:hover {
    text-decoration: none !important;
  }

  /* Clickable Hint */
  .clickable-hint {
    color: rgba(255, 255, 255, 0.5);
  }
  
  .group-hover-indicator:hover .clickable-hint {
    color: #FF1493;
  }
  
  :global([data-theme="light"]) .clickable-hint {
    color: #4b5563 !important;
    font-weight: 500;
  }
  
  :global([data-theme="light"]) .group-hover-indicator:hover .clickable-hint {
    color: #FF1493;
  }

  /* Contador regresivo */
  .countdown-title {
    background: linear-gradient(45deg, #FF1493, #FF6B6B, #FF0040);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 20px rgba(255, 20, 147, 0.3);
  }
  
  .countdown-item {
    background: rgba(255, 20, 147, 0.1);
    border: 2px solid rgba(255, 20, 147, 0.3);
    border-radius: 16px;
    padding: 1.5rem 1rem;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;

    text-align: center;
  }
  
  .countdown-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 20, 147, 0.1), transparent);
    transition: left 0.5s ease;
  }
  
  .countdown-item:hover::before {
    left: 100%;
  }
  
  .countdown-item:hover {
    border-color: rgba(255, 20, 147, 0.5);
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.2);
    transform: translateY(-2px);
  }
  
  .countdown-number {
    font-size: 2rem;
    font-weight: bold;
    color: #FF1493;
    text-shadow: 0 0 15px rgba(255, 20, 147, 0.5);
    margin-bottom: 0.5rem;
    animation: pulse 2s ease-in-out infinite;
  }
  
  .countdown-label {
    font-size: 0.875rem;
    color: #CCCCCC;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 500;
  }
  
  .countdown-message {
    background: linear-gradient(45deg, #FF1493, #32CD32);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: bold;
    font-size: 1.25rem;
    animation: celebration 1s ease-in-out infinite alternate;
  }

    /* Light mode - contador regresivo */
  :global([data-theme="light"]) .countdown-title {
    background: linear-gradient(45deg, #C41E3A, #DC143C, #8B0000) !important;
    -webkit-background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    background-clip: text !important;
    text-shadow: none !important;
  }
  
  :global([data-theme="light"]) .countdown-item {
    background: rgba(255, 20, 147, 0.08) !important;
    border: 2px solid rgba(255, 20, 147, 0.25) !important;
    backdrop-filter: blur(15px) !important;
  }
  
  :global([data-theme="light"]) .countdown-item:hover {
    background: rgba(255, 20, 147, 0.12) !important;
    border-color: rgba(255, 20, 147, 0.4) !important;
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.15) !important;
  }
  
  :global([data-theme="light"]) .countdown-number {
    color: #FF1493 !important;
    text-shadow: none !important;
  }
  
  :global([data-theme="light"]) .countdown-label {
    color: #2D1B1B !important;
    font-weight: 600 !important;
  }
  
  :global([data-theme="light"]) .countdown-message {
    background: linear-gradient(45deg, #FF1493, #32CD32) !important;
    -webkit-background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    background-clip: text !important;
  }
</style>

<style is:global>
  /* ===== ELIMINAR SUBRAYADOS DE TODOS LOS ELEMENTOS ===== */
  a {
    text-decoration: none !important;
  }
  
  a:hover {
    text-decoration: none !important;
  }
  
  a:focus {
    text-decoration: none !important;
  }
  
  a:active {
    text-decoration: none !important;
  }
  
  a:visited {
    text-decoration: none !important;
  }
  
  /* Asegurar que ningún texto tenga subrayado */
  * {
    text-decoration: none !important;
    text-decoration-line: none !important;
  }
  
  /* Eliminar cualquier estilo de Tailwind que pueda causar subrayado */
  .daycard-container * {
    text-decoration: none !important;
    text-decoration-line: none !important;
    text-decoration-style: none !important;
    text-decoration-color: transparent !important;
    border-bottom: none !important;
    border-bottom-width: 0 !important;
    border-bottom-style: none !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  
  /* ===== ELIMINACIÓN SÚPER AGRESIVA DE SUBRAYADOS ===== */
  /* Eliminar cualquier posible subrayado causado por Tailwind, navegador o herencia */
  .daycard-container,
  .daycard-container *,
  .daycard-container *:before,
  .daycard-container *:after {
    text-decoration: none !important;
    text-decoration-line: none !important;
    text-decoration-style: none !important;
    text-decoration-color: transparent !important;
    text-decoration-thickness: 0 !important;
    text-underline-offset: 0 !important;
    text-underline-position: unset !important;
    border-bottom: none !important;
    border-bottom-width: 0 !importan
    border-bottom-style: none !important;
    border-bottom-color: transparent !important;
    outline: none !important;
    box-shadow: none !important;
  }
  
  /* Estados de interacción */
  .daycard-container *:hover,
  .daycard-container *:focus,
  .daycard-container *:active,
  .daycard-container *:visited {
    text-decoration: none !important;
    text-decoration-line: none !important;
    text-decoration-style: none !important;
    text-decoration-color: transparent !important;
    text-decoration-thickness: 0 !important;
    text-underline-offset: 0 !important;
    border-bottom: none !important;
    border-bottom-width: 0 !important;
    border-bottom-style: none !important;
    border-bottom-color: transparent !important;
    outline: none !important;
    box-shadow: none !important;
  }
  
  /* Eliminar pseudo-elementos que puedan crear líneas */
  .daycard-container *::before,
  .daycard-container *::after {
    content: none !important;
    display: none !important;
    border: none !important;
    background: none !important;
    box-shadow: none !important;
  }
  
  /* DayCard Container */
  .daycard-container {
    background: rgba(255, 20, 147, 0.08);
    border: 1px solid rgba(255, 20, 147, 0.3);
    backdrop-filter: blur(10px);
  }
  
  .daycard-container:hover {
    border-color: rgba(255, 20, 147, 0.5);
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.2);
  }
  
  :global([data-theme="light"]) .daycard-container {
    background: rgba(255, 20, 147, 0.05);
    border: 1px solid rgba(255, 20, 147, 0.2);
  }
  
  :global([data-theme="light"]) .daycard-container:hover {
    background: rgba(255, 20, 147, 0.1);
    border-color: rgba(255, 20, 147, 0.4);
  }

  /* Day Number */
  .daycard-day-number {
    color: #FF1493;
    text-decoration: none !important;
    text-shadow: none !important;
  }

  /* Date */
  .daycard-date {
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none !important;
  }
  
  :global([data-theme="light"]) .daycard-date {
    color: #4b5563 !important;
    font-weight: 500;
  }

  /* City */
  .daycard-city {
    color: #FF6B6B;
    text-decoration: none !important;
    text-shadow: none !important;
  }

  /* Title */
  .daycard-title {
    background: linear-gradient(135deg, #FF1493, #FF6B6B);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-decoration: none !important;
  }

  /* Activity Container */
  .daycard-activity {
    background: rgba(0, 0, 0, 0.3);
  }
  
  :global([data-theme="light"]) .daycard-activity {
    background: rgba(255, 255, 255, 0.5);
  }

  /* Activity Types */
  .daycard-activity-transport {
    border-left-color: #FF6B6B !important;
  }

  .daycard-activity-hotel {
    border-left-color: #FF8A80 !important;
  }

  .daycard-activity-food {
    border-left-color: #FF0040 !important;
  }

  .daycard-activity-tourism {
    border-left-color: #FF1493 !important;
  }

  .daycard-activity-culture {
    border-left-color: #FF8A80 !important;
  }

  .daycard-activity-nature {
    border-left-color: #FFB3BA !important;
  }

  .daycard-activity-default {
    border-left-color: #FF6B6B !important;
  }

  /* Activity Name */
  .daycard-activity-name {
    color: white;
    text-decoration: none !important;
  }
  
  :global([data-theme="light"]) .daycard-activity-name {
    color: #1a1a1a !important;
    font-weight: 600;
  }

  /* Activity Details */
  .daycard-activity-details {
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none !important;
  }
  
  :global([data-theme="light"]) .daycard-activity-details {
    color: #2d2d2d !important;
    font-weight: 500;
  }

  /* Badges */
  .daycard-badge-gf {
    background: #FF8A80;
    color: white;
    text-decoration: none !important;
    text-shadow: none !important;
    border-bottom: none !important;
    box-shadow: none !important;
  }

  .daycard-badge-featured {
    background: #FF1493;
    color: white;
    text-decoration: none !important;
    text-shadow: none !important;
    border-bottom: none !important;
    box-shadow: none !important;
  }

  /* GF Alternative */
  .daycard-gf-alternative {
    color: #FF8A80;
    text-decoration: none !important;
  }

  /* Notes */
  .daycard-notes {
    color: rgba(255, 255, 255, 0.6);
    text-decoration: none !important;
  }
  
  :global([data-theme="light"]) .daycard-notes {
    color: #4b5563 !important;
    font-weight: 500;
    opacity: 0.9;
    text-decoration: none !important;
  }
  
  /* ===== CLASES DE UTILIDAD PARA NO SUBRAYADO ===== */
  .no-underline {
    text-decoration: none !important;
  }
  
  .no-underline:hover {
    text-decoration: none !important;
  }
  
  /* Asegurar que span, div, p no tengan subrayado */
  span, div, p, h1, h2, h3, h4, h5, h6 {
    text-decoration: none !important;
  }

  /* ===== ESTILOS ESPECÍFICOS PARA GOOGLE MAPS Y DIRECCIONES ===== */
  .daycard-address {
    color: #888888;
    font-family: monospace;
  }

  :global([data-theme="light"]) .daycard-address {
    color: #666666;
  }

  /* Enlaces de Google Maps */
  .daycard-activity-details a {
    text-decoration: none !important;
    transition: color 0.2s ease;
  }

  .daycard-activity-details a:hover {
    text-decoration: none !important;
    color: #60A5FA !important;
  }

  :global([data-theme="light"]) .daycard-activity-details a:hover {
    color: #3B82F6 !important;
  }

  /* ===== ESTILOS ADICIONALES PARA MODO CLARO ===== */
  
  /* Contenedor principal en modo claro */
  :global([data-theme="light"]) .daycard-container {
    background: rgba(255, 245, 245, 0.9) !important;
    border: 2px solid rgba(255, 107, 107, 0.3) !important;
  }
  
  :global([data-theme="light"]) .daycard-container:hover {
    border-color: rgba(220, 20, 60, 0.5) !important;
    box-shadow: 0 8px 32px rgba(220, 20, 60, 0.2) !important;
  }
  
  /* Actividades en modo claro */
  :global([data-theme="light"]) .daycard-activity {
    background: rgba(255, 240, 240, 0.8) !important;
    border-left-width: 4px;
  }
  
  /* Textos principales más oscuros */
  :global([data-theme="light"]) .daycard-day-number,
  :global([data-theme="light"]) .daycard-city,
  :global([data-theme="light"]) .daycard-title {
    color: #C41E3A !important;
    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.5) !important;
  }
  
  :global([data-theme="light"]) .daycard-date {
    color: #5D4A4A !important;
    font-weight: 600;
  }
  
  :global([data-theme="light"]) .daycard-activity-name {
    color: #2D1B1B !important;
    font-weight: 700;
  }
  
  :global([data-theme="light"]) .daycard-activity-details {
    color: #5D4A4A !important;
    font-weight: 600;
  }
  
  :global([data-theme="light"]) .daycard-notes {
    color: #5D4A4A !important;
    font-weight: 600;
    opacity: 0.9;
  }
</style>