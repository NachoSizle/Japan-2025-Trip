---
import DayCard from './DayCard.astro';
import FlightCard from './FlightCard.astro';
import itinerarioData from '../data/itinerario.json';

const { dias } = itinerarioData;

// Funci√≥n para calcular qu√© tarjetas mostrar seg√∫n la fecha actual
function getDaysToShow() {
  // Para testing, puedes cambiar esta l√≠nea para simular diferentes fechas:
  // const now = new Date('2025-08-10'); // Para probar antes del viaje
  // const now = new Date('2025-08-13'); // Para probar d√≠a de vuelo
  // const now = new Date('2025-08-16'); // Para probar durante el viaje
  const now = new Date();
  
  const currentDate = now.toISOString().split('T')[0]; // YYYY-MM-DD format
  
  console.log('Fecha actual simulada:', currentDate); // Para debug
  
  // Fechas del viaje
  const tripStart = '2025-08-14'; // Llegada a Jap√≥n
  const flightDate = '2025-08-13'; // D√≠a del vuelo desde Espa√±a
  const tripEnd = '2025-08-28';
  
  // Si estamos antes del 14 de agosto (antes de llegar a Jap√≥n)
  if (currentDate < tripStart) {
    console.log('Estamos antes del viaje - mostrando preview con tarjeta de vuelo');
    
    // Si estamos el 13 de agosto o antes, mostrar tarjeta de vuelo
    if (currentDate <= flightDate) {
      // Mostrar tarjeta de vuelo para el primer d√≠a + todas las dem√°s como preview
      return dias.map((dia, index) => ({
        ...dia,
        showFlightCard: index === 0, // Solo para el primer d√≠a
        showFirstOnly: true, // Todos muestran solo preview
        showAllCards: false,
        isCurrentDay: false
      }));
    } else {
      // Entre el 13 y 14, no mostrar tarjeta de vuelo pero s√≠ preview
      return dias.map(dia => ({
        ...dia,
        showFlightCard: false,
        showFirstOnly: true,
        showAllCards: false,
        isCurrentDay: false
      }));
    }
  }
  
  // Si estamos durante el viaje (14-28 agosto)
  if (currentDate >= tripStart && currentDate <= tripEnd) {
    console.log('Estamos durante el viaje - l√≥gica de d√≠a actual');
    return dias.map(dia => {
      // Si es el d√≠a actual, mostrar todas las tarjetas
      if (dia.fecha === currentDate) {
        console.log('D√≠a actual encontrado:', dia.fecha);
        return {
          ...dia,
          showAllCards: true,
          isCurrentDay: true,
          showFlightCard: false,
          showFirstOnly: false
        };
      }
      // Si es un d√≠a futuro, mostrar solo la primera tarjeta
      else if (dia.fecha > currentDate) {
        return {
          ...dia,
          showFirstOnly: true,
          showAllCards: false,
          showFlightCard: false,
          isCurrentDay: false
        };
      }
      // Si es un d√≠a pasado, mostrar todas las tarjetas
      else {
        return {
          ...dia,
          showAllCards: true,
          showFirstOnly: false,
          showFlightCard: false,
          isCurrentDay: false
        };
      }
    });
  }
  
  // Si estamos despu√©s del viaje, mostrar todas las tarjetas
  console.log('Estamos despu√©s del viaje - mostrar todo');
  return dias.map(dia => ({
    ...dia,
    showAllCards: true,
    showFirstOnly: false,
    showFlightCard: false,
    isCurrentDay: false
  }));
}

const daysToShow = getDaysToShow();
---

<section id="itinerario" class="py-12 sm:py-16 md:py-20 timeline-section">
  <div class="container mx-auto px-2 sm:px-4">
    <!-- Header de la secci√≥n -->
    <div class="text-center mb-8 sm:mb-12 md:mb-16">
      <h2 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold font-poppins mb-3 sm:mb-4 md:mb-6 timeline-title">
        Itinerario Completo
      </h2>
      <p class="text-base sm:text-lg md:text-xl timeline-subtitle max-w-3xl mx-auto mb-4 sm:mb-6 md:mb-8 px-2 sm:px-4">
        Explora d√≠a a d√≠a nuestra aventura por Jap√≥n, con opciones especiales para cel√≠acos en cada parada.
      </p>
      
      <!-- Filtros optimizados para m√≥vil -->
      <div class="flex flex-wrap justify-center gap-1 sm:gap-2 md:gap-4 mb-6 sm:mb-8 px-2" x-data="{ activeFilter: 'todos' }">
        <button 
          @click="activeFilter = 'todos'" 
          :class="activeFilter === 'todos' ? 'filter-active-primary' : 'filter-inactive-primary'"
          class="px-2 sm:px-3 md:px-6 py-1.5 sm:py-2 border-2 rounded-full font-medium transition-all duration-300 text-xs whitespace-nowrap flex-shrink-0">
          Todos los d√≠as
        </button>
        <button 
          @click="activeFilter = 'gluten-free'" 
          :class="activeFilter === 'gluten-free' ? 'filter-active-gluten' : 'filter-inactive-gluten'"
          class="px-2 sm:px-3 md:px-6 py-1.5 sm:py-2 border-2 rounded-full font-medium transition-all duration-300 text-xs whitespace-nowrap flex-shrink-0">
          üåæüö´ Sin Gluten
        </button>
        <button 
          @click="activeFilter = 'destacados'" 
          :class="activeFilter === 'destacados' ? 'filter-active-featured' : 'filter-inactive-featured'"
          class="px-2 sm:px-3 md:px-6 py-1.5 sm:py-2 border-2 rounded-full font-medium transition-all duration-300 text-xs whitespace-nowrap flex-shrink-0">
          ‚≠ê Destacados
        </button>
        <button 
          @click="activeFilter = 'turismo'" 
          :class="activeFilter === 'turismo' ? 'filter-active-tourism' : 'filter-inactive-tourism'"
          class="px-2 sm:px-3 md:px-6 py-1.5 sm:py-2 border-2 rounded-full font-medium transition-all duration-300 text-xs whitespace-nowrap flex-shrink-0">
          üóº Turismo
        </button>
      </div>
    </div>

    <!-- Timeline principal optimizada para m√≥vil -->
    <div class="relative">
      <!-- L√≠nea de tiempo vertical - m√°s visible en m√≥vil -->
      <div class="timeline-line absolute left-4 sm:left-8 md:left-1/2 top-0 bottom-0 w-0.5 sm:w-1 transform md:-translate-x-1/2 rounded-full"></div>
      
      <!-- Tarjetas de d√≠as optimizadas para m√≥vil -->
      <div class="space-y-6 sm:space-y-8 md:space-y-12">
        {daysToShow.map((dia, index) => {
          // Crear atributos data para que Alpine.js pueda usarlos
          const hasGlutenFree = dia.actividades.some((act: any) => act.gluten_free === true);
          const hasDestacado = dia.actividades.some((act: any) => act.destacado === true);
          const hasTurismo = dia.actividades.some((act: any) => act.tipo === 'turismo');
          
          // Determinar si es par o impar para el zig-zag (empezando izquierda = √≠ndice par)
          const isLeft = index % 2 === 0;
          
          // Usar type casting para acceder a las propiedades a√±adidas
          const diaExtended = dia as any;
          
          return (
            <div 
              class="relative"
              x-show={`
                activeFilter === 'todos' || 
                (activeFilter === 'gluten-free' && ${hasGlutenFree}) ||
                (activeFilter === 'destacados' && ${hasDestacado}) ||
                (activeFilter === 'turismo' && ${hasTurismo})
              `}
              x-transition:enter="transition ease-out duration-300"
              x-transition:enter-start="opacity-0 transform scale-95"
              x-transition:enter-end="opacity-100 transform scale-100"
              x-transition:leave="transition ease-in duration-200"
              x-transition:leave-start="opacity-100 transform scale-100"
              x-transition:leave-end="opacity-0 transform scale-95">
              
              <!-- Punto de conexi√≥n en la timeline - optimizado para m√≥vil -->
              <div class={`timeline-dot absolute left-4 sm:left-8 md:left-1/2 w-3 h-3 sm:w-4 sm:h-4 rounded-full transform md:-translate-x-1/2 border-2 sm:border-4 z-10 ${diaExtended.isCurrentDay ? 'animate-ping' : 'animate-pulse'}`}></div>
              
              {/* Mostrar tarjeta de vuelo si corresponde */}
              {diaExtended.showFlightCard && (
                <div class={`ml-8 sm:ml-12 md:ml-0 md:w-5/12 md:max-w-lg ${isLeft ? 'md:mr-auto md:pr-6 lg:pr-8' : 'md:ml-auto md:pl-6 lg:pl-8'} mb-6`}>
                  <FlightCard />
                  <div class={`mt-2 transition-colors duration-300 ${isLeft ? 'text-center md:text-left' : 'text-center md:text-right'}`}>
                    <span class="text-xs clickable-hint">
                      ‚úàÔ∏è Informaci√≥n del vuelo (pr√≥ximamente)
                    </span>
                  </div>
                </div>
              )}
              
              <!-- Enlace a p√°gina individual del d√≠a -->
              <a href={`${import.meta.env.BASE_URL}/itinerario/${dia.dia}`} class="block group">
                <!-- Tarjeta - layout m√≥vil first con zig-zag desktop -->
                <div class={`ml-8 sm:ml-12 md:ml-0 md:w-5/12 md:max-w-lg ${isLeft ? 'md:mr-auto md:pr-6 lg:pr-8' : 'md:ml-auto md:pl-6 lg:pl-8'}`}>
                  <DayCard 
                    day={dia.dia}
                    fecha={dia.fecha}
                    titulo={dia.titulo}
                    ciudad={dia.ciudad}
                    actividades={dia.actividades as any}
                  />
                  <!-- Indicador de que es clickeable -->
                  <div class={`mt-2 transition-colors duration-300 ${isLeft ? 'text-center md:text-left' : 'text-center md:text-right'}`}>
                    <span class="text-xs clickable-hint">
                      üëÜ Toca para ver detalles completos
                      {diaExtended.isCurrentDay && <span class="ml-2 text-yellow-400 font-bold">¬°HOY!</span>}
                    </span>
                  </div>
                </div>
              </a>
            </div>
          );
        })}
      </div>
              </a>
            </div>
          );
        })}
      </div>
    </div>

    <!-- Stats del viaje optimizadas para m√≥vil -->
    <div class="mt-8 sm:mt-12 md:mt-16 lg:mt-20 grid grid-cols-2 lg:grid-cols-4 gap-2 sm:gap-4 md:gap-6 lg:gap-8 text-center px-1">
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF1493; text-shadow: 0 0 10px rgba(255, 20, 147, 0.5);">{itinerarioData.viaje.duracion_dias}</div>
        <div class="stat-label text-xs sm:text-sm">D√≠as totales</div>
      </div>
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF6B6B; text-shadow: 0 0 10px rgba(255, 107, 107, 0.5);">{itinerarioData.viaje.ciudades_principales.length}</div>
        <div class="stat-label text-xs sm:text-sm">Ciudades</div>
      </div>
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF0040; text-shadow: 0 0 10px rgba(255, 0, 64, 0.5);">
          {dias.reduce((total, dia) => total + dia.actividades.filter(a => (a as any).tipo === 'comida').length, 0)}
        </div>
        <div class="stat-label text-xs sm:text-sm">Experiencias gastron√≥micas</div>
      </div>
      <div class="timeline-stat-card p-2 sm:p-4 md:p-6 rounded-lg sm:rounded-xl transition-all duration-300 col-span-2 lg:col-span-1">
        <div class="stat-number text-lg sm:text-2xl md:text-3xl font-bold mb-1 sm:mb-2" style="color: #FF8A80; text-shadow: 0 0 10px rgba(255, 138, 128, 0.5);">
          {dias.reduce((total, dia) => total + dia.actividades.filter(a => (a as any).gluten_free).length, 0)}
        </div>
        <div class="stat-label text-xs sm:text-sm">Opciones GF</div>
      </div>
    </div>

    <!-- CTA para m√°s informaci√≥n - optimizado para m√≥vil -->
    <div class="text-center mt-8 sm:mt-12 md:mt-16 px-2 sm:px-4">
      <a href="#gluten-free" class="timeline-cta inline-flex items-center justify-center space-x-2 px-6 sm:px-8 py-3 sm:py-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 text-sm sm:text-base min-w-0">
        <span class="text-lg">üåæ</span>
        <span class="whitespace-nowrap">Ver Gu√≠a Sin Gluten</span>
        <span class="text-lg">üö´</span>
      </a>
    </div>

    <!-- Debug Panel (solo visible en desarrollo) -->
    <div class="mt-8 p-4 bg-gray-800 rounded-lg text-white text-sm debug-panel" x-data="{ showDebug: false }">
      <button @click="showDebug = !showDebug" class="mb-4 px-4 py-2 bg-blue-600 rounded text-xs">
        üîß Debug Mode (Probar fechas)
      </button>
      <div x-show="showDebug" x-transition>
        <p class="mb-4 text-xs text-gray-300">
          Para probar diferentes escenarios, modifica la fecha en el c√≥digo del componente Timeline.astro:
        </p>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-xs">
          <div class="p-3 bg-gray-700 rounded">
            <strong>Antes del viaje:</strong><br>
            <code>new Date('2025-08-10')</code><br>
            <span class="text-green-400">‚úì Solo previews</span>
          </div>
          <div class="p-3 bg-gray-700 rounded">
            <strong>D√≠a de vuelo:</strong><br>
            <code>new Date('2025-08-13')</code><br>
            <span class="text-blue-400">‚úàÔ∏è Con tarjeta de vuelo</span>
          </div>
          <div class="p-3 bg-gray-700 rounded">
            <strong>Durante el viaje:</strong><br>
            <code>new Date('2025-08-16')</code><br>
            <span class="text-yellow-400">üåü D√≠a actual destacado</span>
          </div>
        </div>
        <p class="mt-4 text-xs text-gray-400">
          Fecha actual del sistema: <strong>{new Date().toISOString().split('T')[0]}</strong>
        </p>
      </div>
    </div>
  </div>
</section>

<style>
  /* Timeline Section */
  .timeline-section {
    background: linear-gradient(135deg, #1a1a1a 0%, #2d1b3d 100%);
    position: relative;
  }
  
  :global(:global([data-theme="light"])) .timeline-section {
    background: linear-gradient(135deg, #FFE8E8 0%, #FFDDDD 100%) !important;
  }

  /* Timeline Title */
  .timeline-title {
    background: linear-gradient(135deg, #FF1493, #FF6B6B, #FF0040);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 30px rgba(255, 20, 147, 0.5);
  }

  /* Timeline Subtitle */
  .timeline-subtitle {
    color: rgba(255, 255, 255, 0.8);
  }
  
  /* ===== ESTILOS PARA MODO CLARO ===== */
  :global(:global([data-theme="light"])) .timeline-title {
    background: linear-gradient(135deg, #C41E3A, #DC143C, #8B0000) !important;
    -webkit-background-clip: text !important;
    background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    text-shadow: none !important;
  }
  
  :global(:global([data-theme="light"])) .timeline-subtitle {
    color: #2D1B1B !important;
    font-weight: 600;
    opacity: 0.95;
    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.3);
  }

  /* Timeline Line */
  .timeline-line {
    background: linear-gradient(to bottom, #FF1493, #FF6B6B, #FF0040);
    opacity: 0.6;
  }
  
  :global([data-theme="light"]) .timeline-line {
    background: linear-gradient(to bottom, #FF1493, #FF6B6B, #FF0040);
    opacity: 0.4;
  }

  /* Timeline Dot */
  .timeline-dot {
    background: #FF1493;
    border-color: #1a1a1a !important;
    box-shadow: 0 0 15px rgba(255, 20, 147, 0.8);
  }
  
  :global([data-theme="light"]) .timeline-dot {
    background: #DC143C;
    border-color: #FFE8E8 !important;
    box-shadow: 0 0 15px rgba(220, 20, 60, 0.6);
  }

  /* Filter Buttons */
  .filter-active-primary {
    background: #FF1493 !important;
    color: white !important;
    border-color: #FF1493 !important;
    box-shadow: 0 0 20px rgba(255, 20, 147, 0.6);
  }

  .filter-inactive-primary {
    background: transparent !important;
    color: #FF1493 !important;
    border-color: #FF1493 !important;
  }
  
  .filter-inactive-primary:hover {
    box-shadow: 0 0 20px rgba(255, 20, 147, 0.4);
  }
  
  /* ===== FILTROS MODO CLARO ===== */
  :global([data-theme="light"]) .filter-active-primary {
    background: #DC143C !important;
    color: white !important;
    border-color: #DC143C !important;
    box-shadow: 0 0 15px rgba(220, 20, 60, 0.4);
  }

  :global([data-theme="light"]) .filter-inactive-primary {
    background: rgba(255, 245, 245, 0.7) !important;
    color: #C41E3A !important;
    border-color: #C41E3A !important;
  }
  
  :global([data-theme="light"]) .filter-inactive-primary:hover {
    box-shadow: 0 0 15px rgba(196, 30, 58, 0.3);
    background: rgba(196, 30, 58, 0.1) !important;
  }

  .filter-active-gluten {
    background: #FF6B6B !important;
    color: white !important;
    border-color: #FF6B6B !important;
    box-shadow: 0 0 20px rgba(255, 107, 107, 0.6);
  }

  .filter-inactive-gluten {
    background: transparent !important;
    color: #FF6B6B !important;
    border-color: #FF6B6B !important;
  }
  
  .filter-inactive-gluten:hover {
    box-shadow: 0 0 20px rgba(255, 107, 107, 0.4);
  }

  .filter-active-featured {
    background: #FF0040 !important;
    color: white !important;
    border-color: #FF0040 !important;
    box-shadow: 0 0 20px rgba(255, 0, 64, 0.6);
  }

  .filter-inactive-featured {
    background: transparent !important;
    color: #FF0040 !important;
    border-color: #FF0040 !important;
  }
  
  .filter-inactive-featured:hover {
    box-shadow: 0 0 20px rgba(255, 0, 64, 0.4);
  }

  .filter-active-tourism {
    background: #FF8A80 !important;
    color: #1a1a1a !important;
    border-color: #FF8A80 !important;
    box-shadow: 0 0 20px rgba(255, 138, 128, 0.6);
  }

  .filter-inactive-tourism {
    background: transparent !important;
    color: #FF8A80 !important;
    border-color: #FF8A80 !important;
  }
  
  .filter-inactive-tourism:hover {
    box-shadow: 0 0 20px rgba(255, 138, 128, 0.4);
  }

  /* Stats Cards */
  .timeline-stat-card {
    background: rgba(255, 20, 147, 0.1);
    border: 1px solid rgba(255, 20, 147, 0.3);
    backdrop-filter: blur(10px);
  }
  
  .timeline-stat-card:hover {
    border-color: rgba(255, 20, 147, 0.5);
    box-shadow: 0 8px 32px rgba(255, 20, 147, 0.2);
  }
  
  :global([data-theme="light"]) .timeline-stat-card {
    background: rgba(255, 20, 147, 0.05);
    border: 1px solid rgba(255, 20, 147, 0.2);
  }
  
  :global([data-theme="light"]) .timeline-stat-card:hover {
    background: rgba(255, 20, 147, 0.1);
    border-color: rgba(255, 20, 147, 0.4);
  }

  .stat-label {
    color: rgba(255, 255, 255, 0.7);
  }
  
  :global([data-theme="light"]) .stat-label {
    color: #2d2d2d !important;
    font-weight: 500;
  }

  /* CTA Button */
  .timeline-cta {
    background: linear-gradient(135deg, #FF6B6B, #FF1493);
    color: white;
    box-shadow: 0 4px 20px rgba(255, 20, 147, 0.4);
  }
  
  .timeline-cta:hover {
    box-shadow: 0 8px 30px rgba(255, 20, 147, 0.6);
  }

  /* Clickable Hint */
  .clickable-hint {
    color: rgba(255, 255, 255, 0.5);
  }
  
  .group-hover-indicator:hover .clickable-hint {
    color: #FF1493;
  }
  
  :global([data-theme="light"]) .clickable-hint {
    color: #4b5563 !important;
    font-weight: 500;
  }
  
  :global([data-theme="light"]) .group-hover-indicator:hover .clickable-hint {
    color: #FF1493;
  }

  /* Animaciones personalizadas para los filtros */
  [x-cloak] {
    display: none !important;
  }

  /* Debug Panel */
  .debug-panel {
    font-family: monospace;
    border: 1px solid #374151;
  }
  
  :global([data-theme="light"]) .debug-panel {
    background: #F9FAFB !important;
    color: #1F2937 !important;
    border-color: #D1D5DB !important;
  }
  
  .debug-panel code {
    background: #1F2937;
    padding: 2px 6px;
    border-radius: 4px;
    color: #F59E0B;
  }
  
  :global([data-theme="light"]) .debug-panel code {
    background: #E5E7EB !important;
    color: #B45309 !important;
  }
</style>
